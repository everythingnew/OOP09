public class Bruch{
    int z ;
    int n ;
    String zkette;
    
    Bruch(String input){
        zkette = input;
         z= Integer.valueOf(input.split("/")[0]);
        
         n= Integer.valueOf(input.split("/")[1]);
         
        int gekuerzt[] = kuerze(z,n);
        z= gekuerzt[0];
        n= gekuerzt[1];
        
    }
    //toString Methode überschreiben
    public String toString(){ 
        return (z+"/"+n); 
        
    }  
    
    private int[] kuerze(int input_z,int input_n){
        int x= input_z;
        int y= input_n;
        int k;
        while((input_n%input_z) !=0){
             k= input_n%input_z;
             input_n=input_z;
             input_z=k;
         }
         System.out.println("input_z"+input_z);
        x= x/input_z;
         System.out.println("x "+x);
        y= y/input_z;
         System.out.println("y "+y);
        int[] gekuerzt = new int[]{x,y};
        return gekuerzt;
    }
    
    public String addiere(String input_summand){
    Bruch summand = new Bruch(input_summand);
    //zwei neue zähler ergibt aus Produkt von zählern und nennern
    int erste_z= this.z *summand.n ;
     System.out.println("this.z "+ this.z+" summand.n " +summand.n);
    int zweite_z = this.n * summand.z;
     System.out.println("zweite_z"+zweite_z);
    //Produkt von zwei nennern
    int summand_n = this.n*summand.n;
    int summand_z = erste_z+zweite_z;
    int[] gekuerzt2 = kuerze(summand_z,summand_n);
    return gekuerzt2[0]+"/"+gekuerzt2[1];
    }
}
